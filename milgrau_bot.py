import os
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import requests

TOKEN = os.getenv("TELEGRAM_TOKEN")

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# Lista de a√ß√µes monitoradas pelo usu√°rio
acoes_monitoradas = []

# Comando /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("ü§ñ Ol√°! Eu sou o Mil Grau Na Fita!\nUse /adicionar PETR4 para monitorar uma a√ß√£o.")

# Comando /adicionar
async def adicionar(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.args:
        acao = context.args[0].upper()
        if acao not in acoes_monitoradas:
            acoes_monitoradas.append(acao)
            await update.message.reply_text(f"‚úÖ A√ß√£o {acao} adicionada √† lista.")
        else:
            await update.message.reply_text(f"‚ö†Ô∏è A√ß√£o {acao} j√° est√° sendo monitorada.")
    else:
        await update.message.reply_text("‚ùå Use: /adicionar <c√≥digo_da_a√ß√£o>")

# Comando /listar
async def listar(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if acoes_monitoradas:
        texto = "üìà A√ß√µes monitoradas:\n" + "\n".join(f"- {a}" for a in acoes_monitoradas)
        await update.message.reply_text(texto)
    else:
        await update.message.reply_text("üì≠ Nenhuma a√ß√£o sendo monitorada no momento.")

# Comando /topacoes
async def topacoes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üìä Essa fun√ß√£o ser√° ativada em breve com dados das top a√ß√µes da B3!")

# Inicializa√ß√£o do bot
def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("adicionar", adicionar))
    app.add_handler(CommandHandler("listar", listar))
    app.add_handler(CommandHandler("topacoes", topacoes))
    print("‚úÖ Bot iniciado. Aguardando mensagens...")
    app.run_polling()

if __name__ == "__main__":
    main()
